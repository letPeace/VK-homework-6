/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.ConsignmentNoteItem;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConsignmentNoteItemRecord extends UpdatableRecordImpl<ConsignmentNoteItemRecord> implements Record5<Integer, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.consignment_note_item.id</code>.
     */
    public ConsignmentNoteItemRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.consignment_note_item.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.consignment_note_item.product_id</code>.
     */
    public ConsignmentNoteItemRecord setProductId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.consignment_note_item.product_id</code>.
     */
    public Integer getProductId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.consignment_note_item.price</code>.
     */
    public ConsignmentNoteItemRecord setPrice(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.consignment_note_item.price</code>.
     */
    public Integer getPrice() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.consignment_note_item.quantity</code>.
     */
    public ConsignmentNoteItemRecord setQuantity(Integer value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.consignment_note_item.quantity</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.consignment_note_item.consignment_note_id</code>.
     */
    public ConsignmentNoteItemRecord setConsignmentNoteId(Integer value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.consignment_note_item.consignment_note_id</code>.
     */
    public Integer getConsignmentNoteId() {
        return (Integer) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM.ID;
    }

    @Override
    public Field<Integer> field2() {
        return ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM.PRODUCT_ID;
    }

    @Override
    public Field<Integer> field3() {
        return ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM.PRICE;
    }

    @Override
    public Field<Integer> field4() {
        return ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM.QUANTITY;
    }

    @Override
    public Field<Integer> field5() {
        return ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM.CONSIGNMENT_NOTE_ID;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getProductId();
    }

    @Override
    public Integer component3() {
        return getPrice();
    }

    @Override
    public Integer component4() {
        return getQuantity();
    }

    @Override
    public Integer component5() {
        return getConsignmentNoteId();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getProductId();
    }

    @Override
    public Integer value3() {
        return getPrice();
    }

    @Override
    public Integer value4() {
        return getQuantity();
    }

    @Override
    public Integer value5() {
        return getConsignmentNoteId();
    }

    @Override
    public ConsignmentNoteItemRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ConsignmentNoteItemRecord value2(Integer value) {
        setProductId(value);
        return this;
    }

    @Override
    public ConsignmentNoteItemRecord value3(Integer value) {
        setPrice(value);
        return this;
    }

    @Override
    public ConsignmentNoteItemRecord value4(Integer value) {
        setQuantity(value);
        return this;
    }

    @Override
    public ConsignmentNoteItemRecord value5(Integer value) {
        setConsignmentNoteId(value);
        return this;
    }

    @Override
    public ConsignmentNoteItemRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConsignmentNoteItemRecord
     */
    public ConsignmentNoteItemRecord() {
        super(ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM);
    }

    /**
     * Create a detached, initialised ConsignmentNoteItemRecord
     */
    public ConsignmentNoteItemRecord(Integer id, Integer productId, Integer price, Integer quantity, Integer consignmentNoteId) {
        super(ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM);

        setId(id);
        setProductId(productId);
        setPrice(price);
        setQuantity(quantity);
        setConsignmentNoteId(consignmentNoteId);
    }

    /**
     * Create a detached, initialised ConsignmentNoteItemRecord
     */
    public ConsignmentNoteItemRecord(generated.tables.pojos.ConsignmentNoteItem value) {
        super(ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM);

        if (value != null) {
            setId(value.getId());
            setProductId(value.getProductId());
            setPrice(value.getPrice());
            setQuantity(value.getQuantity());
            setConsignmentNoteId(value.getConsignmentNoteId());
        }
    }
}
