/*
 * This file is generated by jOOQ.
 */
package generated.tables.records;


import generated.tables.ConsignmentNote;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConsignmentNoteRecord extends UpdatableRecordImpl<ConsignmentNoteRecord> implements Record3<Integer, LocalDate, Integer> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.consignment_note.number</code>.
     */
    public ConsignmentNoteRecord setNumber(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.consignment_note.number</code>.
     */
    public Integer getNumber() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.consignment_note.datetime</code>.
     */
    public ConsignmentNoteRecord setDatetime(LocalDate value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.consignment_note.datetime</code>.
     */
    public LocalDate getDatetime() {
        return (LocalDate) get(1);
    }

    /**
     * Setter for <code>public.consignment_note.organization_id</code>.
     */
    public ConsignmentNoteRecord setOrganizationId(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.consignment_note.organization_id</code>.
     */
    public Integer getOrganizationId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, LocalDate, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, LocalDate, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ConsignmentNote.CONSIGNMENT_NOTE.NUMBER;
    }

    @Override
    public Field<LocalDate> field2() {
        return ConsignmentNote.CONSIGNMENT_NOTE.DATETIME;
    }

    @Override
    public Field<Integer> field3() {
        return ConsignmentNote.CONSIGNMENT_NOTE.ORGANIZATION_ID;
    }

    @Override
    public Integer component1() {
        return getNumber();
    }

    @Override
    public LocalDate component2() {
        return getDatetime();
    }

    @Override
    public Integer component3() {
        return getOrganizationId();
    }

    @Override
    public Integer value1() {
        return getNumber();
    }

    @Override
    public LocalDate value2() {
        return getDatetime();
    }

    @Override
    public Integer value3() {
        return getOrganizationId();
    }

    @Override
    public ConsignmentNoteRecord value1(Integer value) {
        setNumber(value);
        return this;
    }

    @Override
    public ConsignmentNoteRecord value2(LocalDate value) {
        setDatetime(value);
        return this;
    }

    @Override
    public ConsignmentNoteRecord value3(Integer value) {
        setOrganizationId(value);
        return this;
    }

    @Override
    public ConsignmentNoteRecord values(Integer value1, LocalDate value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConsignmentNoteRecord
     */
    public ConsignmentNoteRecord() {
        super(ConsignmentNote.CONSIGNMENT_NOTE);
    }

    /**
     * Create a detached, initialised ConsignmentNoteRecord
     */
    public ConsignmentNoteRecord(Integer number, LocalDate datetime, Integer organizationId) {
        super(ConsignmentNote.CONSIGNMENT_NOTE);

        setNumber(number);
        setDatetime(datetime);
        setOrganizationId(organizationId);
    }

    /**
     * Create a detached, initialised ConsignmentNoteRecord
     */
    public ConsignmentNoteRecord(generated.tables.pojos.ConsignmentNote value) {
        super(ConsignmentNote.CONSIGNMENT_NOTE);

        if (value != null) {
            setNumber(value.getNumber());
            setDatetime(value.getDatetime());
            setOrganizationId(value.getOrganizationId());
        }
    }
}
