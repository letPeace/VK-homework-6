/*
 * This file is generated by jOOQ.
 */
package generated;


import generated.tables.ConsignmentNote;
import generated.tables.ConsignmentNoteItem;
import generated.tables.FlywaySchemaHistory;
import generated.tables.Organization;
import generated.tables.Product;
import generated.tables.records.ConsignmentNoteItemRecord;
import generated.tables.records.ConsignmentNoteRecord;
import generated.tables.records.FlywaySchemaHistoryRecord;
import generated.tables.records.OrganizationRecord;
import generated.tables.records.ProductRecord;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ConsignmentNoteRecord> CONSIGNMENT_NOTE_PK = Internal.createUniqueKey(ConsignmentNote.CONSIGNMENT_NOTE, DSL.name("consignment_note_pk"), new TableField[] { ConsignmentNote.CONSIGNMENT_NOTE.NUMBER }, true);
    public static final UniqueKey<ConsignmentNoteItemRecord> CONSIGNMENT_NOTE_ITEM_PK = Internal.createUniqueKey(ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM, DSL.name("consignment_note_item_pk"), new TableField[] { ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM.ID }, true);
    public static final UniqueKey<FlywaySchemaHistoryRecord> FLYWAY_SCHEMA_HISTORY_PK = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, DSL.name("flyway_schema_history_pk"), new TableField[] { FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK }, true);
    public static final UniqueKey<OrganizationRecord> ORGANIZATION_PK = Internal.createUniqueKey(Organization.ORGANIZATION, DSL.name("organization_pk"), new TableField[] { Organization.ORGANIZATION.TAXPAYER_IDENTIFICATION_NUMBER }, true);
    public static final UniqueKey<ProductRecord> PRODUCT_PK = Internal.createUniqueKey(Product.PRODUCT, DSL.name("product_pk"), new TableField[] { Product.PRODUCT.CODE }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<ConsignmentNoteRecord, OrganizationRecord> CONSIGNMENT_NOTE__CONSIGNMENT_NOTE_ORGANIZATION_ID_FKEY = Internal.createForeignKey(ConsignmentNote.CONSIGNMENT_NOTE, DSL.name("consignment_note_organization_id_fkey"), new TableField[] { ConsignmentNote.CONSIGNMENT_NOTE.ORGANIZATION_ID }, Keys.ORGANIZATION_PK, new TableField[] { Organization.ORGANIZATION.TAXPAYER_IDENTIFICATION_NUMBER }, true);
    public static final ForeignKey<ConsignmentNoteItemRecord, ConsignmentNoteRecord> CONSIGNMENT_NOTE_ITEM__CONSIGNMENT_NOTE_ITEM_CONSIGNMENT_NOTE_ID_FKEY = Internal.createForeignKey(ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM, DSL.name("consignment_note_item_consignment_note_id_fkey"), new TableField[] { ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM.CONSIGNMENT_NOTE_ID }, Keys.CONSIGNMENT_NOTE_PK, new TableField[] { ConsignmentNote.CONSIGNMENT_NOTE.NUMBER }, true);
    public static final ForeignKey<ConsignmentNoteItemRecord, ProductRecord> CONSIGNMENT_NOTE_ITEM__CONSIGNMENT_NOTE_ITEM_PRODUCT_ID_FKEY = Internal.createForeignKey(ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM, DSL.name("consignment_note_item_product_id_fkey"), new TableField[] { ConsignmentNoteItem.CONSIGNMENT_NOTE_ITEM.PRODUCT_ID }, Keys.PRODUCT_PK, new TableField[] { Product.PRODUCT.CODE }, true);
}
